import json
from pprint import pprint

import telebot
from telebot import types
from config import API_TOKEN
from data import *
import random


bot = telebot.TeleBot(API_TOKEN)

class Command:
    ADD_WORD = '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï'
    DELETE_WORD = '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æüîô'
    NEXT = '–î–∞–ª—å—à–µ ‚è≠'

@bot.message_handler(commands=['start'])
def handle_start(message):
    id = message.chat.id
    user_name = f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_{id}'

    if check_user(id):
        add_new_user(id, user_name)
        bot.send_message(message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç üëã –î–∞–≤–∞–π –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ. –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–∂–µ—à—å –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ '
                         '—É–¥–æ–±–Ω–æ–º –¥–ª—è —Å–µ–±—è —Ç–µ–º–ø–µ.\n–£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∞–∂—ë—Ä, –∫–∞–∫ '
                         '–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –∏ —Å–æ–±–∏—Ä–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É –¥–ª—è –æ–±—É—á–µ–Ω–∏—è.\n–î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø—Ä–æ–ª—å–∑—É–π—Å—è '
                         '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏: –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï,—É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô.–ù—É —á—Ç–æ, –Ω–∞—á–Ω—ë–º ‚¨áÔ∏è')

    markup = types.ReplyKeyboardMarkup(row_width=2)
    russian_word = get_rwords_list(id)
    target_word = get_target_word(russian_word)
    target_word_btn = types.KeyboardButton(target_word)
    other_words = get_other_words(target_word)
    other_words_btns = [types.KeyboardButton(word) for word in other_words]

    buttons = [target_word_btn] + other_words_btns
    random.shuffle(buttons)
    next_btn = types.KeyboardButton(Command.NEXT)
    add_word_btn = types.KeyboardButton(Command.ADD_WORD)
    delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
    buttons.extend([add_word_btn, delete_word_btn, next_btn])

    markup.add(*buttons)

    data = {'target': target_word, 'other': other_words}
    set_state(id, data)
    bot.send_message(message.chat.id, f'–£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ {russian_word}', reply_markup=markup)

@bot.message_handler(func=lambda message: True, content_types=['text'])
def message_reply(message):
        state = get_state(message.chat.id)
        target_word = state['target']
        other_words = state['other']
        if message.text == target_word:
            bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ')
            handle_start(message)
        elif message.text in other_words:
            bot.send_message(message.chat.id, '–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ')

        if message.text == Command.NEXT:
            handle_start(message)

        if message.text == Command.ADD_WORD:
            print('Here - if message.text == Command.ADD_WORD')
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ')
            bot.register_next_step_handler(message, get_text)



@bot.message_handler(func=lambda message: True, content_types=['text'])
def get_text(message):
    command_add_word(message.chat.id, message.text)
    bot.send_message(message.chat.id, f'–°–ª–æ–≤–æ "{message.text}" –¥–æ–±–∞–≤–ª–µ–Ω–æ!')
    handle_start(message)

if __name__ == '__main__':
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    bot.polling()